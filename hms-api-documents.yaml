openapi: 3.0.3
info:
  title: Hospital Management System - OpenAPI 3.0
  description: |-
    Tài liệu API của Hệ thống quản lý bệnh viện (Hospital Management System)
  version: 1.0.0
servers:
  - url: https://petstore3.swagger.io/api/v3
  - url: http://localhost:8080/api/v1
tags:
  - name: staff
    description: Các API liên quan đến nhân viên
  - name: doctors
    description: Các API liên quan đến bác sĩ
  - name: nurses
    description: Các API liên quan đến y tá
  - name: supportStaff
    description: Các API liên quan đến nhân viên hỗ trợ
  - name: patients
    description: Các API liên quan đến bệnh nhân
  - name: appointments
    description: Các API liên quan đến đơn bệnh
  - name: equipment
    description: Các API liên quan đến thiết bị
  - name: drugs
    description: Các API liên quan đến thuốc
paths:
  /staff:
    get:
      tags:
        - staff
      summary: Xem thông tin nhân viên
      description: Xem thông tin tất cả các nhân viên trong bệnh viện
      operationId: getStaff
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Staff"
        "404":
          description: Staff not found
  /staff/doctors:
    get:
      tags:
        - doctors
      summary: Xem thông tin bác sĩ
      description: Xem thông tin tất cả các bác sĩ trong bệnh viện
      operationId: getDoctors
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"
        "404":
          description: Doctors not found
    post:
      tags:
        - doctors
      summary: Thêm bác sĩ mới
      description: Thêm bác sĩ mới
      operationId: addDoctor
      requestBody:
        description: Thêm bác sĩ mới vào cơ sở dữ liệu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDoctor"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddDoctor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddDoctor"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /staff/doctors/{doctor_id}:
    get:
      tags:
        - doctors
      summary: Xem thông tin bác sĩ
      description: Xem thông tin của 1 bác sĩ theo id
      operationId: getDoctorById
      parameters:
        - name: doctor_id
          in: path
          description: "Id của bác sĩ cần xem chi tiết. Dùng cgRXxtrmo545vI5YbAZH để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctor"
            application/xml:
              schema:
                $ref: "#/components/schemas/Doctor"
        "400":
          description: Invalid doctor_id supplied
        "404":
          description: Doctor not found
    put:
      tags:
        - doctors
      summary: Cập nhật thông tin của bác sĩ
      description: Cập nhật thông tin của bác sĩ
      operationId: updateDoctorById
      parameters:
        - name: doctor_id
          in: path
          description: "Id của bác sĩ cần cập nhật thông tin. Dùng cgRXxtrmo545vI5YbAZH để test"
          required: true
          schema:
            type: string
      requestBody:
        description: Cập nhật thông tin của bác sĩ
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDoctor"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddDoctor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddDoctor"
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid doctor_id supplied
        "404":
          description: Doctor not found
    delete:
      tags:
        - doctors
      summary: Xoá bác sĩ
      description: Xoá bác sĩ khỏi cơ sở dữ liệu
      operationId: deleteDoctorById
      parameters:
        - name: doctor_id
          in: path
          description: Id của bác sĩ cần xoá. **Tạo 1 bác sĩ mới rồi lên firebase lấy id để xoá.**
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid doctor_id
  /staff/doctors/{doctor_id}/patients:
    get:
      tags:
        - doctors
      summary: Xem bệnh nhân của bác sĩ
      description: Xem tất cả bệnh nhân của bác sĩ
      operationId: getDoctorPatients
      parameters:
        - name: doctor_id
          in: path
          description: "Id của bác sĩ cần cập nhật thông tin. Dùng cgRXxtrmo545vI5YbAZH để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid doctor_id
  /patients:
    get:
      tags:
        - patients
      summary: Xem thông tin của bệnh nhân
      description: Xem thông tin tất cả các bệnh nhân
      operationId: getPatients
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "404":
          description: Patients not found
    post:
      tags:
        - patients
      summary: Thêm bệnh nhân mới
      description: Thêm bệnh nhân mới
      operationId: addPatient
      requestBody:
        description: Thêm bệnh nhân mới vào cơ sở dữ liệu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPatient"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddPatient"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddPatient"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /patients/{patient_id}:
    get:
      tags:
        - patients
      summary: Xem thông tin bệnh nhân
      description: Xem thông tin của 1 bệnh nhân
      operationId: getPatientById
      parameters:
        - name: patient_id
          in: path
          description: "Id của bệnh nhân cần xem chi tiết. Dùng 0n1HhIX3QI8GmJi8qfwK để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
            application/xml:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Invalid patient_id supplied
        "404":
          description: Patient not found
    put:
      tags:
        - patients
      summary: Cập nhật thông tin của bệnh nhân
      description: Cập nhật thông tin của bệnh nhân
      operationId: updatePatientById
      parameters:
        - name: patient_id
          in: path
          description: "Id của bệnh nhân cần cập nhật thông tin. Dùng 0n1HhIX3QI8GmJi8qfwK để test"
          required: true
          schema:
            type: string
      requestBody:
        description: Cập nhật thông tin của bệnh nhân
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPatient"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddPatient"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddPatient"
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid patient_id supplied
        "404":
          description: Patient not found
    delete:
      tags:
        - patients
      summary: Xoá bệnh nhân
      description: Xoá bệnh nhân khỏi cơ sở dữ liệu
      operationId: deletePatientById
      parameters:
        - name: patient_id
          in: path
          description: Id của bệnh nhân cần xoá. **Tạo 1 bệnh nhân mới rồi lên firebase lấy id để xoá.**
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid patient_id
  /patients/{patient_id}/medicalRecord:
    get:
      tags:
        - patients
      summary: Xem bệnh án của bệnh nhân
      description: Xem bệnh án của 1 bệnh nhân
      operationId: getPatientMedicalRecord
      parameters:
        - name: patient_id
          in: path
          description: "Id của bệnh nhân cần xem bệnh án. Dùng 0n1HhIX3QI8GmJi8qfwK để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalRecord"
            application/xml:
              schema:
                $ref: "#/components/schemas/MedicalRecord"
        "400":
          description: Invalid patient_id supplied
        "404":
          description: Patient not found
  /appointments:
    get:
      tags:
        - appointments
      summary: Xem danh sách các đơn bệnh
      description: Xem danh sách tất cả các đơn bệnh trong bệnh viện
      operationId: getAppointments
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "404":
          description: Appointments not found
    post:
      tags:
        - appointments
      summary: Tạo đơn bệnh mới
      description: Tạo đơn bệnh mới
      operationId: addAppointment
      requestBody:
        description: Thêm đơn bệnh mới vào cơ sở dữ liệu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddAppointment"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddAppointment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddAppointment"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /appointments/{appointment_id}:
    get:
      tags:
        - appointments
      summary: Xem đơn bệnh theo id
      description: Xem chi tiết đơn bệnh theo id
      operationId: getAppointmentsById
      parameters:
        - name: appointment_id
          in: path
          description: "Id của đơn bệnh cần xem chi tiết. Dùng E9GsO1NBqpYw0LC0o1gM để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "404":
          description: Appointments not found
    put:
      tags:
        - appointments
      summary: Cập nhật đơn bệnh
      description: Cập nhật đơn bệnh
      operationId: updateAppointment
      parameters:
        - name: appointment_id
          in: path
          description: "Id của đơn bệnh cần cập nhật. Dùng E9GsO1NBqpYw0LC0o1gM để test"
          required: true
          schema:
            type: string
      requestBody:
        description: Cập nhật thông tin của đơn bệnh
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddAppointment"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddAppointment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddAppointment"
        required: true
      responses:
        "200":
          description: Successful operation
        "404":
          description: Appointments not found
    delete:
      tags:
        - appointments
      summary: Xoá đơn bệnh
      description: Xoá đơn bệnh khỏi cơ sở dữ liệu
      operationId: deleteAppointmentById
      parameters:
        - name: appointment_id
          in: path
          description: Id của đơn bệnh cần xoá. **Tạo 1 đơn bệnh mới rồi lên firebase lấy id của nó để xoá**
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid doctor_id
  /staff/nurse:
    get:
      tags:
        - nurses
      summary: Xem thông tin y tá
      description: Xem thông tin của các y tá trong bệnh viện
      operationId: getNurse
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nurse"
        "404":
          description: Nurse not found
    post:
      tags:
        - nurses
      summary: Thêm một y tá mới
      description: Thêm một y tá mới
      operationId: addNurse
      requestBody:
        description: Thêm y tá mới vào cơ sở dữ liệu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddNurse"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddNurse"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddNurse"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /staff/nurse/{nurse_id}:
    get:
      tags:
        - nurses
      summary: Xem thông tin y tá
      description: Xem thông tin y tá theo id
      operationId: getNurseById
      parameters:
        - name: nurse_id
          in: path
          description: "Id của y tá cần xem chi tiết. Dùng Y6Z3vWVhIJhJSiM7od4R để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nurse"
            application/xml:
              schema:
                $ref: "#/components/schemas/Nurse"
        "400":
          description: Invalid nurse_id supplied
        "404":
          description: Nurse not found
    put:
      tags:
        - nurses
      summary: Cập nhật thông tin của y tá
      description: Cập nhật thông tin của y tá
      operationId: updateNurseById
      parameters:
        - name: nurse_id
          in: path
          description: "Id của y tá cần cập nhật. Dùng Y6Z3vWVhIJhJSiM7od4R để test"
          required: true
          schema:
            type: string
      requestBody:
        description: Cập nhật thông tin của y tá
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddNurse"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddNurse"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddNurse"
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid nurse_id supplied
        "404":
          description: Nurse not found
    delete:
      tags:
        - nurses
      summary: Xóa y tá
      description: Xóa y tá khỏi cơ sở dữ liệu
      operationId: deleteNurseById
      parameters:
        - name: nurse_id
          in: path
          description: Id của y tá cần xoá. **Tạo 1 y tá mới rồi lên firebase lấy id để xoá.**
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid nurse_id
  # /pet/{petId}/uploadImage:
  #   post:
  #     tags:
  #       - pet
  #     summary: uploads an image
  #     description: ""
  #     operationId: uploadFile
  #     parameters:
  #       - name: petId
  #         in: path
  #         description: ID of pet to update
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #       - name: additionalMetadata
  #         in: query
  #         description: Additional Metadata
  #         required: false
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/octet-stream:
  #           schema:
  #             type: string
  #             format: binary
  #     responses:
  #       "200":
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ApiResponse"
  #     security:
  #       - petstore_auth:
  #           - write:pets
  #           - read:pets
  /staff/supportStaff:
    get:
      tags:
        - supportStaff
      summary: Xem thông tin nhân viên hỗ trợ
      description: Xem thông tin tất cả nhân viên hỗ trợ trong bệnh viện
      operationId: getSupportStaff
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupportStaff"
        "404":
          description: Support staff not found
    post:
      tags:
        - supportStaff
      summary: Thêm nhân viên hỗ trợ mới
      description: Thêm nhân viên hỗ trợ mới
      operationId: addSupportStaff
      requestBody:
        description: Thêm nhân viên hỗ trợ mới vào cơ sở dữ liệu
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSupportStaff"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddSupportStaff"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddSupportStaff"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /staff/supportStaff/{supportStaff_id}:
    get:
      tags:
        - supportStaff
      summary: Xem thông tin nhân viên hỗ trợ
      description: Xem thông tin nhân viên hỗ trợ theo id
      operationId: getSupportStaffById
      parameters:
        - name: supportStaff_id
          in: path
          description: "Id của nhân viên hỗ trợ cần xem chi tiết. Dùng T2g3cyzImX69qpWh5nuN để test"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupportStaff"
            application/xml:
              schema:
                $ref: "#/components/schemas/SupportStaff"
        "400":
          description: Invalid supportStaff_id supplied
        "404":
          description: Order not found
    put:
      tags:
        - supportStaff
      summary: Cập nhật thông tin của nhân viên hỗ trợ
      description: Cập nhật thông tin của nhân viên hỗ trợ
      operationId: updateSupportStaffById
      parameters:
        - name: supportStaff_id
          in: path
          description: "Id của nhân viên hỗ trợ cần xem chi tiết. Dùng T2g3cyzImX69qpWh5nuN để test"
          required: true
          schema:
            type: string
      requestBody:
        description: Cập nhật thông tin của nhân viên hỗ trợ
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSupportStaff"
          application/xml:
            schema:
              $ref: "#/components/schemas/AddSupportStaff"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AddSupportStaff"
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid supportstaff_id supplied
        "404":
          description: Doctor not found
    delete:
      tags:
        - supportStaff
      summary: Xóa nhân viên hỗ trợ
      description: Xóa nhân viên hỗ trợ khỏi cơ sở dữ liệu
      operationId: deleteSupportStaffById
      parameters:
        - name: supportStaff_id
          in: path
          description: Id của nhân viên hỗ trợ cần xoá. **Tạo 1 nhân viên hỗ trợ mới rồi lên firebase lấy id để xoá.**
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid supportStaff_id supplied
components:
  schemas:
    Staff:
      type: object
      properties:
        id:
          type: string
          example: HNC4vvn6DLES09emJQBl
        firstName:
          type: string
          example: Phuc
        lastName:
          type: string
          example: Le
        age:
          type: integer
          example: 30
        dateOfBirth:
          type: string
          format: date
          example: 05/03/2002
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: 0123456789
        role:
          type: string
          example: doctor
    Doctor:
      type: object
      properties:
        id:
          type: string
          example: cgRXxtrmo545vI5YbAZH
        firstName:
          type: string
          example: Phuc
        lastName:
          type: string
          example: Le
        dateOfBirth:
          type: string
          format: date
          example: 05/03/2002
        age:
          type: integer
          example: 22
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "0123456789"
        salary:
          type: integer
          example: 15000000
        specialty:
          type: string
          example: Tim mạch
    AddDoctor:
      required:
        - firstName
        - lastName
        - dateOfBirth
        - age
        - gender
        - phoneNumber
        - salary
        - specialty
      type: object
      properties:
        firstName:
          type: string
          example: K
        lastName:
          type: string
          example: Nguyen
        dateOfBirth:
          type: string
          format: date
          example: 12/31/1994
        age:
          type: integer
          example: 30
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "0004567891"
        salary:
          type: integer
          example: 20000000
        specialty:
          type: string
          example: Tim mạch
    Patient:
      type: object
      properties:
        id:
          type: string
          example: 0n1HhIX3QI8GmJi8qfwK
        firstName:
          type: string
          example: Thinh
        lastName:
          type: string
          example: Nguyen Thi
        age:
          type: integer
          example: 25
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "6410983572"
        healthInsurance:
          type: string
          example: "true"
        doctorResponbility:
          type: string
          example: "cgRXxtrmo545vI5YbAZH"
        dateOfBirth:
          type: string
          format: date
          example: 18/04/2008
    AddPatient:
      required:
        - firstName
        - lastName
        - dateOfBirth
        - age
        - gender
        - phoneNumber
        - healthInsurance
        - doctorResponbility
      type: object
      properties:
        firstName:
          type: string
          example: A
        lastName:
          type: string
          example: Nguyen
        dateOfBirth:
          type: string
          format: date
          example: 17/5/2002
        age:
          type: integer
          example: 22
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "0949777565"
        healthInsurance:
          type: integer
          example: 20000000
        doctorResponbility:
          type: string
          example: HNC4vvn6DLES09emJQBl
    MedicalRecord:
      type: object
      properties:
        id:
          type: string
          example: E9GsO1NBqpYw0LC0o1gM
        appointmentTime:
          type: string
          example: 20/06/2024
        doctor:
          type: string
          example: Chung Thinh
        result:
          type: string
          example: Sốt, nhức đầu
        roomID:
          type: string
          example: 401
    Appointment:
      type: object
      properties:
        id:
          type: string
          example: 4LfDAQ91Cw86uB0s92ko
        appointmentTime:
          type: string
          format: date-time
          example: June 12, 2024 at 11:51:32 AM
        doctorID:
          type: string
          example: JidK3G5TMD9sANQdnnIW
        patientID:
          type: string
          example: OqY0WecTEX0ti2TxNIGF
        result:
          type: string
          example: Đau dạy dày
        roomID:
          type: string
          example: 301
    AddAppointment:
      required:
        - appointmentTime
        - doctorID
        - patientID
        - result
        - roomID
      type: object
      properties:
        appointmentTime:
          type: string
          format: date-time
          example: June 20, 2024 11:51:32
        doctorID:
          type: string
          example: JidK3G5TMD9sANQdnnIW
        patientID:
          type: string
          example: OqY0WecTEX0ti2TxNIGF
        result:
          type: string
          example: Sốt, nhức đầu
        roomID:
          type: string
          example: 401
    Nurse:
      type: object
      properties:
        id:
          type: string
          example: Y6Z3vWVhIJhJSiM7od4R
        firstName:
          type: string
          example: Phuc
        lastName:
          type: string
          example: Vien
        dateOfBirth:
          type: string
          format: date
          example: 12/01/2002
        age:
          type: integer
          example: 25
        gender:
          type: string
          example: female
        phoneNumber:
          type: string
          example: "9870123456"
        salary:
          type: integer
          example: 30000000
    AddNurse:
      required:
        - firstName
        - lastName
        - dateOfBirth
        - age
        - gender
        - phoneNumber
        - salary
      type: object
      properties:
        firstName:
          type: string
          example: S
        lastName:
          type: string
          example: Nghiem
        dateOfBirth:
          type: string
          format: date
          example: 12/01/1998
        age:
          type: integer
          example: 30
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "00110007238"
        salary:
          type: integer
          example: 20000000
    SupportStaff:
      type: object
      properties:
        id:
          type: string
          example: T2g3cyzImX69qpWh5nuN
        firstName:
          type: string
          example: Trump
        lastName:
          type: string
          example: Donald
        dateOfBirth:
          type: string
          format: date
          example: 12/06/2002
        age:
          type: integer
          example: 28
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "5601928374"
    AddSupportStaff:
      required:
        - firstName
        - lastName
        - dateOfBirth
        - age
        - gender
        - phoneNumber
        - salary
      type: object
      properties:
        firstName:
          type: string
          example: SS
        lastName:
          type: string
          example: Nguyen
        dateOfBirth:
          type: string
          format: date
          example: 12/31/1685
        age:
          type: integer
          example: 31
        gender:
          type: string
          example: male
        phoneNumber:
          type: string
          example: "1224056829"
        salary:
          type: integer
          example: 294620556
